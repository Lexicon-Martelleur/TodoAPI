// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoAPI.DBContext;

#nullable disable

namespace TodoAPI.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20240820132853_TodoDBInitialMigration")]
    partial class TodoDBInitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TodoAPI.Entities.TodoTimeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TimeStamp")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("TimeStampedTodos");
                });

            modelBuilder.Entity("TodoAPI.Entities.TodoValueEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TodoTimeEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TodoTimeEntityId")
                        .IsUnique();

                    b.ToTable("ValueTodos");
                });

            modelBuilder.Entity("TodoAPI.Entities.TodoValueEntity", b =>
                {
                    b.HasOne("TodoAPI.Entities.TodoTimeEntity", "TodoEntity")
                        .WithOne("Todo")
                        .HasForeignKey("TodoAPI.Entities.TodoValueEntity", "TodoTimeEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TodoEntity");
                });

            modelBuilder.Entity("TodoAPI.Entities.TodoTimeEntity", b =>
                {
                    b.Navigation("Todo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
